#include "fila.h"
#include <string.h>

#define TAM_INICIAL 5
/**************************************
 * DADOS
 **************************************/
struct fila
{
	TipoElemento *vetor;
	int tamVetor;
	int inicio;
	int fim;
	int qtdeElementos;
};

/**************************************
 * IMPLEMENTAÇÃO
 **************************************/
Fila *fila_criar()
{
	Fila *f = (Fila *)malloc(sizeof(Fila));
	f->vetor = (TipoElemento *)calloc(TAM_INICIAL, sizeof(TipoElemento));

	f->tamVetor = TAM_INICIAL;
	f->inicio = 0;
	f->fim = f->qtdeElementos - 1;
	f->qtdeElementos = 0;

	return f;
}
void fila_destruir(Fila **enderecoFila);
bool fila_inserir(Fila *f, TipoElemento elemento);
bool fila_remover(Fila *f, TipoElemento *saida); // estratégia do scanf
bool fila_primeiro(Fila *f, TipoElemento *saida)
{
	*saida = f->vetor[f->inicio];

	return true;

} // estratégia do scanf
bool fila_vazia(Fila *f)
{
	if (f->qtdeElementos == 0)
	{
		return true;
	}
	else
	{
		return false;
	}
}
int fila_tamanho(Fila *f)
{
	return f->tamVetor;
}
void fila_imprimir(Fila *f)
{
}
Fila *fila_clone(Fila *f);
bool fila_toString(Fila *f, char *str);
bool fila_inserirTodos(Fila *f, TipoElemento *vetor, int tamVetor);
